//
//  NoteRouter.swift
//  MirianMaglakelidze#26
//
//  Created by Admin on 8/26/22.
//  Copyright (c) 2022 ___ORGANIZATIONNAME___. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

@objc protocol NoteRoutingLogic {
    func routeToEdit(segue: UIStoryboardSegue?)
    func routToAdd(segue: UIStoryboardSegue?)
}

protocol NoteDataPassing {
    var dataStore: NoteDataStore? { get }
}

class NoteRouter: NSObject, NoteRoutingLogic, NoteDataPassing {
    
    
    weak var viewController: NoteViewController?
    var dataStore: NoteDataStore?
    
    // MARK: Routing
    
    func routeToEdit(segue: UIStoryboardSegue?) {
        let storyboard = UIStoryboard(name: "Main", bundle: nil)
        guard let destinationVC = storyboard.instantiateViewController(withIdentifier: "EditViewController") as? EditViewController else { return }
        var destinationDS = destinationVC.router!.dataStore!
        passDataToSomewhere(source: dataStore!, destination: &destinationDS)
        navigateTo(source: viewController!, destination: destinationVC)
    }
    
    func routToAdd(segue: UIStoryboardSegue?) {
        let storyboard = UIStoryboard(name: "Main", bundle: nil)
        guard let destinationVC = storyboard.instantiateViewController(withIdentifier: "AddViewController") as? AddViewController else { return }
        navigateTo(source: viewController!, destination: destinationVC)
    }
    
    //   MARK: Navigation
    
    func navigateTo(source: NoteViewController, destination: UIViewController) {
        source.navigationController?.pushViewController(destination, animated: true)
    }
    
    //   MARK: Passing data
    
    func passDataToSomewhere(source: NoteDataStore, destination: inout EditDataStore) {
        destination.noteForEdit = source.note
    }
}
